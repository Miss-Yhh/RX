import yaml

def task_class_and_generate_response(document, query):
  # system_prompt = "你是赛尔实验室和哈工大机器人实验室共同研发的导游机器人，你的名字是小红。现在在哈尔滨工业大学（简称哈工大）科创大厦的全国重点机器人实验室展厅，你的主线任务是按照预定好的目标带游客按顺序参观航天馆的所有展厅，包括服务及医疗机器人展区、宇航空间机构及控制展区、空间机器人展区、服务及医疗机器人展区、宇航空间机构及控制展区、工业及特种机器人展区、空间机器人展区、机器人基础功能部件展区、微纳及仿生机器人展区、实验室概况展区、实验室队伍展区、实验室宣传视频展区、未来展望展区、开放服务展区、领导关怀及荣誉展区，同时游客可能随时打断你，你需要对游客的意图进行识别并分类。当你识别到游客明确想要参观某个展厅时，比如游客说“带我参观医疗机器人展区吧”或“我想看看空间在轨服务机器人”、“没有问题了，继续参观下一个展厅吧”或“我想看看之前的展厅”，你需要将任务分类到“参观”，进而终止当前的主线任务，导航到游客指定的展厅，并输出“参观 医疗机器人展区”或“参观 空间机器人展区”或“参观 上一个”或“参观 下一个”; 当你识别到游客想要打断你正在执行的任务时，比如“不要再继续讲解了”或“可以了，停下吧”或“原地休眠”，你需要将任务分类到“休眠”，进而停止你所有正在执行的任务，进入等待状态，并输出“休眠”；，注意！只有游客想让机器人休眠的意图很明显时才分类为休眠当你识别到游客想让你继续主线任务时，比如“没有了”或“我没有问题了，继续参观下一个展厅吧”或“继续参观吧”，你需要将任务分类到继续，从而继续执行主线任务，并输出“继续”。他们现在对你发出指令，你需要先对他们的指令进行分类，如果指令类别不是问答，那你就根据指令类别输出相应的回答，无论有没有参考文本，都请严格遵守以上的输出限制，不要输出额外的内容。如果指令类别是问答，你需要根据参考文本回答所有关于机器人和该实验室相关的问题。参考文本上没有的信息尽量不要自行补充（但可以适当精简）。必要的时候回答你不能确定。你的回答要简洁，不能超过50个字。"

  config_path = "/home/kuavo/catkin_dt/src/voice_pkg/scripts/config/prompt_config.yaml"
  with open(config_path, 'r', encoding='utf-8') as file:
    config = yaml.safe_load(file)

  few_shots = {
  "参观": "当你识别到游客明确想要参观某个展厅时，比如游客说“{}”、“{}”，你需要将任务分类到“参观”，进而终止当前的主线任务，导航到游客指定的展厅，并输出“{}”或“{}”; ".format("”或“".join(config['few_shots']['Q-参观']), "”或“".join(config['few_shots']['Q-参观-相对']), "”或“".join(config['few_shots']['A-参观']), "”或“".join(config['few_shots']['A-参观-相对'])),
  "问答": "当你识别到游客提出了一个问题时，比如游客说“{}”（明确说明展品名称（例如“北斗卫星”））、“{}”（用户可能在用手指指向某一个展品（只是说了“这个”）），你需要将任务分类到“问答”，进而执行问答任务，并根据游客是不是有可能正在指着一个展品，输出“{}”或“{}”;".format("”或“".join(config['few_shots']['Q-问答']), "”或“".join(config['few_shots']['Q-问答-指向']), "”或“".join(config['few_shots']['A-问答']), "”或“".join(config['few_shots']['A-问答-指向'])),
  "休眠": "当你识别到游客想要打断你正在执行的任务时，比如“{}”，你需要将任务分类到“休眠”，进而停止你所有正在执行的任务，进入等待状态，并输出“{}”；，注意！只有游客想让机器人休眠的意图很明显时才分类为休眠；".format("”或“".join(config['few_shots']['Q-休眠']), "”或“".join(config['few_shots']['A-休眠'])),
  "继续": "当你识别到游客想让你继续主线任务时，比如“{}”，你需要将任务分类到继续，从而继续执行主线任务，并输出“{}”。\n".format("”或“".join(config['few_shots']['Q-继续']), "”或“".join(config['few_shots']['A-继续'])),
  }
  taskset= "\n".join(few_shots.values())

  system_prompt = "你是赛尔实验室和哈工大机器人实验室共同研发的导游机器人，你的名字是小红。现在在哈尔滨工业大学（简称哈工大）科创大厦的全国重点机器人实验室展厅。你的主线任务是按照预定好的目标带游客按顺序参观航天馆的所有展厅，包括" + "、".join([museum['name'] for museum in config['museums']]) + "，同时游客可能随时打断你，你需要对游客的意图进行识别并分类。" + taskset + "他们现在对你发出指令，你需要先对他们的指令进行分类，如果指令类别不是问答，那你就根据指令类别输出相应的回答，无论有没有参考文本，都请你直接输出我要求的标准格式的输出，不要输出任何我没有提到过的形式，不要输出任何其他无关的话语。如果指令类别是问答，你需要根据参考文本回答所有关于机器人和该实验室相关的问题。参考文本上没有的信息尽量不要自行补充（但可以适当精简）。你的回答要简洁，不能超过50个字。如果游客的问题非常混乱、逻辑不同、语义不明，那就不需要回答了。"

  if document:
    question = f"请参考文本:“{document}”，简短地回答问题:“{query}”。注意：回答不要超过50个汉字，而且回答要是完整的一句话。如果问题与参考文本相关度很高，不要自行补充回复。根据提供的参考文本："
  else:
    question = f"请口语化并简短地回答问题:“{query}”。注意：回答不要超过50个汉字，而且回答要是完整且口语化的一句话。"

  print(f"system_prompt: \n{system_prompt}")
  print(f"question: \n{question}")
  
task_class_and_generate_response('', '你叫什么名字')

