# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import android_msg_pb2 as android__msg__pb2

GRPC_GENERATED_VERSION = '1.63.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in android_msg_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class PublishRobotStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.report_robot_info = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_info',
                request_serializer=android__msg__pb2.rp_robot_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_pos_status = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_pos_status',
                request_serializer=android__msg__pb2.rp_pos_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_speed_status = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_speed_status',
                request_serializer=android__msg__pb2.rp_vel_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_rosstatus = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_rosstatus',
                request_serializer=android__msg__pb2.rp_processState.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_emergency_status = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_emergency_status',
                request_serializer=android__msg__pb2.rp_emergence_status.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_basicstatus = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_basicstatus',
                request_serializer=android__msg__pb2.rp_machineState.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_loc_status = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_loc_status',
                request_serializer=android__msg__pb2.rp_loc_status.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_move_status = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_move_status',
                request_serializer=android__msg__pb2.rp_move_status.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_charge_status = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_charge_status',
                request_serializer=android__msg__pb2.rp_charge_status.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_voltage = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_voltage',
                request_serializer=android__msg__pb2.rp_navvoltage.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_systemmsg = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_systemmsg',
                request_serializer=android__msg__pb2.rp_system_message.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_map = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_map',
                request_serializer=android__msg__pb2.rp_runningmap.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_updatemap = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_updatemap',
                request_serializer=android__msg__pb2.rp_runningmapupdate.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_sensor = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_sensor',
                request_serializer=android__msg__pb2.rp_sensorstatus.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_laserscan = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_laserscan',
                request_serializer=android__msg__pb2.rp_laserscan.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_robot_trace = channel.unary_unary(
                '/navmsg.PublishRobot/report_robot_trace',
                request_serializer=android__msg__pb2.rp_trace_status.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_score = channel.unary_unary(
                '/navmsg.PublishRobot/report_score',
                request_serializer=android__msg__pb2.rp_targetsocre.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_ptz = channel.unary_unary(
                '/navmsg.PublishRobot/report_ptz',
                request_serializer=android__msg__pb2.rp_ptz_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_air_item = channel.unary_unary(
                '/navmsg.PublishRobot/report_air_item',
                request_serializer=android__msg__pb2.rp_air_item.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_lift = channel.unary_unary(
                '/navmsg.PublishRobot/report_lift',
                request_serializer=android__msg__pb2.rp_lift_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_fzulift = channel.unary_unary(
                '/navmsg.PublishRobot/report_fzulift',
                request_serializer=android__msg__pb2.rp_fzulift_status.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_ultr_info = channel.unary_unary(
                '/navmsg.PublishRobot/report_ultr_info',
                request_serializer=android__msg__pb2.rp_ultr_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_colision_info = channel.unary_unary(
                '/navmsg.PublishRobot/report_colision_info',
                request_serializer=android__msg__pb2.rp_colision_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_ultrasonic = channel.unary_unary(
                '/navmsg.PublishRobot/report_ultrasonic',
                request_serializer=android__msg__pb2.rp_ultrasonic.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_driver_state = channel.unary_unary(
                '/navmsg.PublishRobot/report_driver_state',
                request_serializer=android__msg__pb2.rp_driver_state.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.report_obstacle_avoidance_status = channel.unary_unary(
                '/navmsg.PublishRobot/report_obstacle_avoidance_status',
                request_serializer=android__msg__pb2.rp_obstacle_avoidance_status.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)


class PublishRobotServicer(object):
    """Missing associated documentation comment in .proto file."""

    def report_robot_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_pos_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_speed_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_rosstatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_emergency_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_basicstatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_loc_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_move_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_charge_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_voltage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_systemmsg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_map(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_updatemap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_sensor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_laserscan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_robot_trace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_score(self, request, context):
        """--------------------------
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_ptz(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_air_item(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_lift(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_fzulift(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_ultr_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_colision_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_ultrasonic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_driver_state(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def report_obstacle_avoidance_status(self, request, context):
        """
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PublishRobotServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'report_robot_info': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_info,
                    request_deserializer=android__msg__pb2.rp_robot_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_pos_status': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_pos_status,
                    request_deserializer=android__msg__pb2.rp_pos_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_speed_status': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_speed_status,
                    request_deserializer=android__msg__pb2.rp_vel_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_rosstatus': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_rosstatus,
                    request_deserializer=android__msg__pb2.rp_processState.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_emergency_status': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_emergency_status,
                    request_deserializer=android__msg__pb2.rp_emergence_status.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_basicstatus': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_basicstatus,
                    request_deserializer=android__msg__pb2.rp_machineState.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_loc_status': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_loc_status,
                    request_deserializer=android__msg__pb2.rp_loc_status.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_move_status': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_move_status,
                    request_deserializer=android__msg__pb2.rp_move_status.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_charge_status': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_charge_status,
                    request_deserializer=android__msg__pb2.rp_charge_status.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_voltage': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_voltage,
                    request_deserializer=android__msg__pb2.rp_navvoltage.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_systemmsg': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_systemmsg,
                    request_deserializer=android__msg__pb2.rp_system_message.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_map': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_map,
                    request_deserializer=android__msg__pb2.rp_runningmap.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_updatemap': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_updatemap,
                    request_deserializer=android__msg__pb2.rp_runningmapupdate.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_sensor': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_sensor,
                    request_deserializer=android__msg__pb2.rp_sensorstatus.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_laserscan': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_laserscan,
                    request_deserializer=android__msg__pb2.rp_laserscan.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_robot_trace': grpc.unary_unary_rpc_method_handler(
                    servicer.report_robot_trace,
                    request_deserializer=android__msg__pb2.rp_trace_status.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_score': grpc.unary_unary_rpc_method_handler(
                    servicer.report_score,
                    request_deserializer=android__msg__pb2.rp_targetsocre.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_ptz': grpc.unary_unary_rpc_method_handler(
                    servicer.report_ptz,
                    request_deserializer=android__msg__pb2.rp_ptz_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_air_item': grpc.unary_unary_rpc_method_handler(
                    servicer.report_air_item,
                    request_deserializer=android__msg__pb2.rp_air_item.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_lift': grpc.unary_unary_rpc_method_handler(
                    servicer.report_lift,
                    request_deserializer=android__msg__pb2.rp_lift_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_fzulift': grpc.unary_unary_rpc_method_handler(
                    servicer.report_fzulift,
                    request_deserializer=android__msg__pb2.rp_fzulift_status.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_ultr_info': grpc.unary_unary_rpc_method_handler(
                    servicer.report_ultr_info,
                    request_deserializer=android__msg__pb2.rp_ultr_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_colision_info': grpc.unary_unary_rpc_method_handler(
                    servicer.report_colision_info,
                    request_deserializer=android__msg__pb2.rp_colision_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_ultrasonic': grpc.unary_unary_rpc_method_handler(
                    servicer.report_ultrasonic,
                    request_deserializer=android__msg__pb2.rp_ultrasonic.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_driver_state': grpc.unary_unary_rpc_method_handler(
                    servicer.report_driver_state,
                    request_deserializer=android__msg__pb2.rp_driver_state.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'report_obstacle_avoidance_status': grpc.unary_unary_rpc_method_handler(
                    servicer.report_obstacle_avoidance_status,
                    request_deserializer=android__msg__pb2.rp_obstacle_avoidance_status.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'navmsg.PublishRobot', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PublishRobot(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def report_robot_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_info',
            android__msg__pb2.rp_robot_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_pos_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_pos_status',
            android__msg__pb2.rp_pos_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_speed_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_speed_status',
            android__msg__pb2.rp_vel_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_rosstatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_rosstatus',
            android__msg__pb2.rp_processState.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_emergency_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_emergency_status',
            android__msg__pb2.rp_emergence_status.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_basicstatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_basicstatus',
            android__msg__pb2.rp_machineState.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_loc_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_loc_status',
            android__msg__pb2.rp_loc_status.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_move_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_move_status',
            android__msg__pb2.rp_move_status.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_charge_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_charge_status',
            android__msg__pb2.rp_charge_status.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_voltage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_voltage',
            android__msg__pb2.rp_navvoltage.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_systemmsg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_systemmsg',
            android__msg__pb2.rp_system_message.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_map(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_map',
            android__msg__pb2.rp_runningmap.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_updatemap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_updatemap',
            android__msg__pb2.rp_runningmapupdate.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_sensor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_sensor',
            android__msg__pb2.rp_sensorstatus.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_laserscan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_laserscan',
            android__msg__pb2.rp_laserscan.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_robot_trace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_robot_trace',
            android__msg__pb2.rp_trace_status.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_score(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_score',
            android__msg__pb2.rp_targetsocre.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_ptz(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_ptz',
            android__msg__pb2.rp_ptz_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_air_item(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_air_item',
            android__msg__pb2.rp_air_item.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_lift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_lift',
            android__msg__pb2.rp_lift_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_fzulift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_fzulift',
            android__msg__pb2.rp_fzulift_status.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_ultr_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_ultr_info',
            android__msg__pb2.rp_ultr_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_colision_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_colision_info',
            android__msg__pb2.rp_colision_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_ultrasonic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_ultrasonic',
            android__msg__pb2.rp_ultrasonic.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_driver_state(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_driver_state',
            android__msg__pb2.rp_driver_state.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def report_obstacle_avoidance_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PublishRobot/report_obstacle_avoidance_status',
            android__msg__pb2.rp_obstacle_avoidance_status.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class NavsystemStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.query_robot_info = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_info',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.robot_info.FromString,
                _registered_method=True)
        self.query_robot_pos_status = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_pos_status',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.pos_info.FromString,
                _registered_method=True)
        self.query_robot_speed_status = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_speed_status',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.vel_info.FromString,
                _registered_method=True)
        self.query_robot_rosstatus = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_rosstatus',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.processState.FromString,
                _registered_method=True)
        self.query_robot_emergency_status = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_emergency_status',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.emergence_status.FromString,
                _registered_method=True)
        self.query_robot_basicstatus = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_basicstatus',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.machineState.FromString,
                _registered_method=True)
        self.query_robot_loc_status = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_loc_status',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.loc_status.FromString,
                _registered_method=True)
        self.query_robot_move_status = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_move_status',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.move_status.FromString,
                _registered_method=True)
        self.query_robot_charge_status = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_charge_status',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.charge_status.FromString,
                _registered_method=True)
        self.query_robot_voltage = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_voltage',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.navvoltage.FromString,
                _registered_method=True)
        self.query_robot_systemmsg = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_systemmsg',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.system_message.FromString,
                _registered_method=True)
        self.query_robot_map = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_map',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.runningmap.FromString,
                _registered_method=True)
        self.query_robot_sensor = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_sensor',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.sensorstatus.FromString,
                _registered_method=True)
        self.query_robot_laserscan = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_laserscan',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.laserscan.FromString,
                _registered_method=True)
        self.query_robot_sonardistances = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_sonardistances',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.sonar_distances.FromString,
                _registered_method=True)
        self.query_robot_sonardata = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_sonardata',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.sonar_data.FromString,
                _registered_method=True)
        self.query_robot_sensorcondition = channel.unary_unary(
                '/navmsg.Navsystem/query_robot_sensorcondition',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.sensor_condition.FromString,
                _registered_method=True)
        self.set_report_cfg = channel.unary_unary(
                '/navmsg.Navsystem/set_report_cfg',
                request_serializer=android__msg__pb2.report_cfg.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.handle_cli_register = channel.unary_unary(
                '/navmsg.Navsystem/handle_cli_register',
                request_serializer=android__msg__pb2.register_client.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_robotinfo = channel.unary_unary(
                '/navmsg.Navsystem/get_robotinfo',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.robot_info.FromString,
                _registered_method=True)
        self.get_robotpose = channel.unary_unary(
                '/navmsg.Navsystem/get_robotpose',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.pos_info.FromString,
                _registered_method=True)
        self.get_robotspeed = channel.unary_unary(
                '/navmsg.Navsystem/get_robotspeed',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.vel_info.FromString,
                _registered_method=True)
        self.get_rosstate = channel.unary_unary(
                '/navmsg.Navsystem/get_rosstate',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.processState.FromString,
                _registered_method=True)
        self.get_machinestate = channel.unary_unary(
                '/navmsg.Navsystem/get_machinestate',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.machineState.FromString,
                _registered_method=True)
        self.get_lognum = channel.unary_unary(
                '/navmsg.Navsystem/get_lognum',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.lognum.FromString,
                _registered_method=True)
        self.get_logdata = channel.unary_unary(
                '/navmsg.Navsystem/get_logdata',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.logdata.FromString,
                _registered_method=True)
        self.get_chargestatus = channel.unary_unary(
                '/navmsg.Navsystem/get_chargestatus',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.charge_status.FromString,
                _registered_method=True)
        self.set_recharge = channel.unary_unary(
                '/navmsg.Navsystem/set_recharge',
                request_serializer=android__msg__pb2.charge_handle.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.set_robot_speed = channel.unary_unary(
                '/navmsg.Navsystem/set_robot_speed',
                request_serializer=android__msg__pb2.vel_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.start_nav_localize = channel.unary_unary(
                '/navmsg.Navsystem/start_nav_localize',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.pos_info.FromString,
                _registered_method=True)
        self.set_nav_initpose = channel.unary_unary(
                '/navmsg.Navsystem/set_nav_initpose',
                request_serializer=android__msg__pb2.pos_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.set_nav_reinitpose = channel.unary_unary(
                '/navmsg.Navsystem/set_nav_reinitpose',
                request_serializer=android__msg__pb2.reinitpose_status.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.set_nav_goalpose = channel.unary_unary(
                '/navmsg.Navsystem/set_nav_goalpose',
                request_serializer=android__msg__pb2.pos_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.set_nav_goalcancel = channel.unary_unary(
                '/navmsg.Navsystem/set_nav_goalcancel',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.start_navigation = channel.unary_unary(
                '/navmsg.Navsystem/start_navigation',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.start_navigation_map = channel.unary_unary(
                '/navmsg.Navsystem/start_navigation_map',
                request_serializer=android__msg__pb2.navops.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.stop_navigation = channel.unary_unary(
                '/navmsg.Navsystem/stop_navigation',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.switchmap_navigation = channel.unary_unary(
                '/navmsg.Navsystem/switchmap_navigation',
                request_serializer=android__msg__pb2.navops.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.start_gmapping = channel.unary_unary(
                '/navmsg.Navsystem/start_gmapping',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.stop_gmapping = channel.unary_unary(
                '/navmsg.Navsystem/stop_gmapping',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.savemap_gmapping = channel.unary_unary(
                '/navmsg.Navsystem/savemap_gmapping',
                request_serializer=android__msg__pb2.gmappingops.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.reset_gmapping = channel.unary_unary(
                '/navmsg.Navsystem/reset_gmapping',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_robot_mode = channel.unary_unary(
                '/navmsg.Navsystem/get_robot_mode',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.reply_value.FromString,
                _registered_method=True)
        self.get_allmaps = channel.unary_unary(
                '/navmsg.Navsystem/get_allmaps',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.navmap_collec.FromString,
                _registered_method=True)
        self.update_mapname = channel.unary_unary(
                '/navmsg.Navsystem/update_mapname',
                request_serializer=android__msg__pb2.navmap_req.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.delete_map = channel.unary_unary(
                '/navmsg.Navsystem/delete_map',
                request_serializer=android__msg__pb2.navmap_req.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_mapdata = channel.unary_unary(
                '/navmsg.Navsystem/get_mapdata',
                request_serializer=android__msg__pb2.navmap.SerializeToString,
                response_deserializer=android__msg__pb2.navmapdata.FromString,
                _registered_method=True)
        self.get_mapmeta = channel.unary_unary(
                '/navmsg.Navsystem/get_mapmeta',
                request_serializer=android__msg__pb2.navmap.SerializeToString,
                response_deserializer=android__msg__pb2.navmapmeta.FromString,
                _registered_method=True)
        self.set_sonardistances = channel.unary_unary(
                '/navmsg.Navsystem/set_sonardistances',
                request_serializer=android__msg__pb2.sonar_distances.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_mapdata_compress = channel.unary_unary(
                '/navmsg.Navsystem/get_mapdata_compress',
                request_serializer=android__msg__pb2.navmap.SerializeToString,
                response_deserializer=android__msg__pb2.navmapdata.FromString,
                _registered_method=True)
        self.update_mapdata_compress = channel.unary_unary(
                '/navmsg.Navsystem/update_mapdata_compress',
                request_serializer=android__msg__pb2.navmapdata.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_map_file = channel.unary_unary(
                '/navmsg.Navsystem/get_map_file',
                request_serializer=android__msg__pb2.navmap.SerializeToString,
                response_deserializer=android__msg__pb2.map_file.FromString,
                _registered_method=True)
        self.set_map_file = channel.unary_unary(
                '/navmsg.Navsystem/set_map_file',
                request_serializer=android__msg__pb2.map_file.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_map_currpos = channel.unary_unary(
                '/navmsg.Navsystem/get_map_currpos',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.mappos.FromString,
                _registered_method=True)
        self.add_map_pos = channel.unary_unary(
                '/navmsg.Navsystem/add_map_pos',
                request_serializer=android__msg__pb2.map_waypoint.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_map_pos = channel.unary_unary(
                '/navmsg.Navsystem/get_map_pos',
                request_serializer=android__msg__pb2.map_waypoint.SerializeToString,
                response_deserializer=android__msg__pb2.mappos.FromString,
                _registered_method=True)
        self.get_map_allpos = channel.unary_unary(
                '/navmsg.Navsystem/get_map_allpos',
                request_serializer=android__msg__pb2.map_waypoint.SerializeToString,
                response_deserializer=android__msg__pb2.mappos_collec.FromString,
                _registered_method=True)
        self.update_map_pos = channel.unary_unary(
                '/navmsg.Navsystem/update_map_pos',
                request_serializer=android__msg__pb2.map_waypoint.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.del_map_pos = channel.unary_unary(
                '/navmsg.Navsystem/del_map_pos',
                request_serializer=android__msg__pb2.map_waypoint.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.del_map_allpos = channel.unary_unary(
                '/navmsg.Navsystem/del_map_allpos',
                request_serializer=android__msg__pb2.map_waypoint.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_all_navqueue_pos = channel.unary_unary(
                '/navmsg.Navsystem/get_all_navqueue_pos',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.mappos_collec.FromString,
                _registered_method=True)
        self.add_navqueue_pos = channel.unary_unary(
                '/navmsg.Navsystem/add_navqueue_pos',
                request_serializer=android__msg__pb2.mappos.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_navqueue_pos = channel.unary_unary(
                '/navmsg.Navsystem/get_navqueue_pos',
                request_serializer=android__msg__pb2.mappos.SerializeToString,
                response_deserializer=android__msg__pb2.mappos.FromString,
                _registered_method=True)
        self.update_navqueue_pos = channel.unary_unary(
                '/navmsg.Navsystem/update_navqueue_pos',
                request_serializer=android__msg__pb2.mappos.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.del_navqueue_pos = channel.unary_unary(
                '/navmsg.Navsystem/del_navqueue_pos',
                request_serializer=android__msg__pb2.mappos.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.del_all_navqueue_pos = channel.unary_unary(
                '/navmsg.Navsystem/del_all_navqueue_pos',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.load_navqueue_pos = channel.unary_unary(
                '/navmsg.Navsystem/load_navqueue_pos',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.mappos_collec.FromString,
                _registered_method=True)
        self.save_navqueue_pos = channel.unary_unary(
                '/navmsg.Navsystem/save_navqueue_pos',
                request_serializer=android__msg__pb2.mappos_collec.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.start_nav_queue = channel.unary_unary(
                '/navmsg.Navsystem/start_nav_queue',
                request_serializer=android__msg__pb2.navmode.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.stop_nav_queue = channel.unary_unary(
                '/navmsg.Navsystem/stop_nav_queue',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_nav_status = channel.unary_unary(
                '/navmsg.Navsystem/get_nav_status',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.navstatus.FromString,
                _registered_method=True)
        self.get_nav_mode = channel.unary_unary(
                '/navmsg.Navsystem/get_nav_mode',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.navmode.FromString,
                _registered_method=True)
        self.set_nav_mode = channel.unary_unary(
                '/navmsg.Navsystem/set_nav_mode',
                request_serializer=android__msg__pb2.navmode.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.set_nav_pause_interval = channel.unary_unary(
                '/navmsg.Navsystem/set_nav_pause_interval',
                request_serializer=android__msg__pb2.navpause.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.nav_manual_moveto_next = channel.unary_unary(
                '/navmsg.Navsystem/nav_manual_moveto_next',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.start_trace = channel.unary_unary(
                '/navmsg.Navsystem/start_trace',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.stop_trace = channel.unary_unary(
                '/navmsg.Navsystem/stop_trace',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.switchmap_trace = channel.unary_unary(
                '/navmsg.Navsystem/switchmap_trace',
                request_serializer=android__msg__pb2.traceops.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.cmd_trace = channel.unary_unary(
                '/navmsg.Navsystem/cmd_trace',
                request_serializer=android__msg__pb2.trace_cmd.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.set_trace_pos_list = channel.unary_unary(
                '/navmsg.Navsystem/set_trace_pos_list',
                request_serializer=android__msg__pb2.trace_pos_list.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.cmd_joystick = channel.unary_unary(
                '/navmsg.Navsystem/cmd_joystick',
                request_serializer=android__msg__pb2.joystick_cmd.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_nav_targetscore = channel.unary_unary(
                '/navmsg.Navsystem/get_nav_targetscore',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.targetsocre.FromString,
                _registered_method=True)
        self.set_target_command = channel.unary_unary(
                '/navmsg.Navsystem/set_target_command',
                request_serializer=android__msg__pb2.targetcommand.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.set_target_mode = channel.unary_unary(
                '/navmsg.Navsystem/set_target_mode',
                request_serializer=android__msg__pb2.targetmode.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_robot_move_status = channel.unary_unary(
                '/navmsg.Navsystem/get_robot_move_status',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.move_status.FromString,
                _registered_method=True)
        self.control_ptz = channel.unary_unary(
                '/navmsg.Navsystem/control_ptz',
                request_serializer=android__msg__pb2.ptz_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.control_lift = channel.unary_unary(
                '/navmsg.Navsystem/control_lift',
                request_serializer=android__msg__pb2.reply_value.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.set_lift = channel.unary_unary(
                '/navmsg.Navsystem/set_lift',
                request_serializer=android__msg__pb2.reply_value.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.cmd_fzulift = channel.unary_unary(
                '/navmsg.Navsystem/cmd_fzulift',
                request_serializer=android__msg__pb2.reply_value.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.start_navigation_default = channel.unary_unary(
                '/navmsg.Navsystem/start_navigation_default',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_moving_param_default = channel.unary_unary(
                '/navmsg.Navsystem/get_moving_param_default',
                request_serializer=android__msg__pb2.client_request.SerializeToString,
                response_deserializer=android__msg__pb2.moving_param_default.FromString,
                _registered_method=True)
        self.set_buzzer = channel.unary_unary(
                '/navmsg.Navsystem/set_buzzer',
                request_serializer=android__msg__pb2.buzzer_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.set_ultrasonic = channel.unary_unary(
                '/navmsg.Navsystem/set_ultrasonic',
                request_serializer=android__msg__pb2.ultr_cmd.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_driver_state = channel.unary_unary(
                '/navmsg.Navsystem/get_driver_state',
                request_serializer=android__msg__pb2.driver_state_cmd.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.get_obstacle_avoidance_status = channel.unary_unary(
                '/navmsg.Navsystem/get_obstacle_avoidance_status',
                request_serializer=android__msg__pb2.obstacle_avoidance_cmd.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.set_obstacle_avoidance_status = channel.unary_unary(
                '/navmsg.Navsystem/set_obstacle_avoidance_status',
                request_serializer=android__msg__pb2.obstacle_avoidance_status.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)
        self.turn_inplace = channel.unary_unary(
                '/navmsg.Navsystem/turn_inplace',
                request_serializer=android__msg__pb2.inplace_info.SerializeToString,
                response_deserializer=android__msg__pb2.server_reply.FromString,
                _registered_method=True)


class NavsystemServicer(object):
    """Missing associated documentation comment in .proto file."""

    def query_robot_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_pos_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_speed_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_rosstatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_emergency_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_basicstatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_loc_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_move_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_charge_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_voltage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_systemmsg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_map(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_sensor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_laserscan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_sonardistances(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_sonardata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_robot_sensorcondition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_report_cfg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def handle_cli_register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_robotinfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_robotpose(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_robotspeed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_rosstate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_machinestate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_lognum(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_logdata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_chargestatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_recharge(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_robot_speed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def start_nav_localize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_nav_initpose(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_nav_reinitpose(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_nav_goalpose(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_nav_goalcancel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def start_navigation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def start_navigation_map(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stop_navigation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def switchmap_navigation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def start_gmapping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stop_gmapping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def savemap_gmapping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def reset_gmapping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_robot_mode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_allmaps(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_mapname(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_map(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_mapdata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_mapmeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_sonardistances(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_mapdata_compress(self, request, context):
        """--------------hxc20180809----------
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_mapdata_compress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_map_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_map_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_map_currpos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_map_pos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_map_pos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_map_allpos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_map_pos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def del_map_pos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def del_map_allpos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_all_navqueue_pos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_navqueue_pos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_navqueue_pos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_navqueue_pos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def del_navqueue_pos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def del_all_navqueue_pos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def load_navqueue_pos(self, request, context):
        """----------hxc20180809-----
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def save_navqueue_pos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def start_nav_queue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stop_nav_queue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_nav_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_nav_mode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_nav_mode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_nav_pause_interval(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_manual_moveto_next(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def start_trace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stop_trace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def switchmap_trace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cmd_trace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_trace_pos_list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cmd_joystick(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_nav_targetscore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_target_command(self, request, context):
        """--------------------------------------
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_target_mode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_robot_move_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def control_ptz(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def control_lift(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_lift(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cmd_fzulift(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def start_navigation_default(self, request, context):
        """---------
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_moving_param_default(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_buzzer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_ultrasonic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_driver_state(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_obstacle_avoidance_status(self, request, context):
        """����ʹ��״̬
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_obstacle_avoidance_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def turn_inplace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NavsystemServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'query_robot_info': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_info,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.robot_info.SerializeToString,
            ),
            'query_robot_pos_status': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_pos_status,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.pos_info.SerializeToString,
            ),
            'query_robot_speed_status': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_speed_status,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.vel_info.SerializeToString,
            ),
            'query_robot_rosstatus': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_rosstatus,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.processState.SerializeToString,
            ),
            'query_robot_emergency_status': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_emergency_status,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.emergence_status.SerializeToString,
            ),
            'query_robot_basicstatus': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_basicstatus,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.machineState.SerializeToString,
            ),
            'query_robot_loc_status': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_loc_status,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.loc_status.SerializeToString,
            ),
            'query_robot_move_status': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_move_status,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.move_status.SerializeToString,
            ),
            'query_robot_charge_status': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_charge_status,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.charge_status.SerializeToString,
            ),
            'query_robot_voltage': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_voltage,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.navvoltage.SerializeToString,
            ),
            'query_robot_systemmsg': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_systemmsg,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.system_message.SerializeToString,
            ),
            'query_robot_map': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_map,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.runningmap.SerializeToString,
            ),
            'query_robot_sensor': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_sensor,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.sensorstatus.SerializeToString,
            ),
            'query_robot_laserscan': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_laserscan,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.laserscan.SerializeToString,
            ),
            'query_robot_sonardistances': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_sonardistances,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.sonar_distances.SerializeToString,
            ),
            'query_robot_sonardata': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_sonardata,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.sonar_data.SerializeToString,
            ),
            'query_robot_sensorcondition': grpc.unary_unary_rpc_method_handler(
                    servicer.query_robot_sensorcondition,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.sensor_condition.SerializeToString,
            ),
            'set_report_cfg': grpc.unary_unary_rpc_method_handler(
                    servicer.set_report_cfg,
                    request_deserializer=android__msg__pb2.report_cfg.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'handle_cli_register': grpc.unary_unary_rpc_method_handler(
                    servicer.handle_cli_register,
                    request_deserializer=android__msg__pb2.register_client.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_robotinfo': grpc.unary_unary_rpc_method_handler(
                    servicer.get_robotinfo,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.robot_info.SerializeToString,
            ),
            'get_robotpose': grpc.unary_unary_rpc_method_handler(
                    servicer.get_robotpose,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.pos_info.SerializeToString,
            ),
            'get_robotspeed': grpc.unary_unary_rpc_method_handler(
                    servicer.get_robotspeed,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.vel_info.SerializeToString,
            ),
            'get_rosstate': grpc.unary_unary_rpc_method_handler(
                    servicer.get_rosstate,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.processState.SerializeToString,
            ),
            'get_machinestate': grpc.unary_unary_rpc_method_handler(
                    servicer.get_machinestate,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.machineState.SerializeToString,
            ),
            'get_lognum': grpc.unary_unary_rpc_method_handler(
                    servicer.get_lognum,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.lognum.SerializeToString,
            ),
            'get_logdata': grpc.unary_unary_rpc_method_handler(
                    servicer.get_logdata,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.logdata.SerializeToString,
            ),
            'get_chargestatus': grpc.unary_unary_rpc_method_handler(
                    servicer.get_chargestatus,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.charge_status.SerializeToString,
            ),
            'set_recharge': grpc.unary_unary_rpc_method_handler(
                    servicer.set_recharge,
                    request_deserializer=android__msg__pb2.charge_handle.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'set_robot_speed': grpc.unary_unary_rpc_method_handler(
                    servicer.set_robot_speed,
                    request_deserializer=android__msg__pb2.vel_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'start_nav_localize': grpc.unary_unary_rpc_method_handler(
                    servicer.start_nav_localize,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.pos_info.SerializeToString,
            ),
            'set_nav_initpose': grpc.unary_unary_rpc_method_handler(
                    servicer.set_nav_initpose,
                    request_deserializer=android__msg__pb2.pos_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'set_nav_reinitpose': grpc.unary_unary_rpc_method_handler(
                    servicer.set_nav_reinitpose,
                    request_deserializer=android__msg__pb2.reinitpose_status.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'set_nav_goalpose': grpc.unary_unary_rpc_method_handler(
                    servicer.set_nav_goalpose,
                    request_deserializer=android__msg__pb2.pos_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'set_nav_goalcancel': grpc.unary_unary_rpc_method_handler(
                    servicer.set_nav_goalcancel,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'start_navigation': grpc.unary_unary_rpc_method_handler(
                    servicer.start_navigation,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'start_navigation_map': grpc.unary_unary_rpc_method_handler(
                    servicer.start_navigation_map,
                    request_deserializer=android__msg__pb2.navops.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'stop_navigation': grpc.unary_unary_rpc_method_handler(
                    servicer.stop_navigation,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'switchmap_navigation': grpc.unary_unary_rpc_method_handler(
                    servicer.switchmap_navigation,
                    request_deserializer=android__msg__pb2.navops.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'start_gmapping': grpc.unary_unary_rpc_method_handler(
                    servicer.start_gmapping,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'stop_gmapping': grpc.unary_unary_rpc_method_handler(
                    servicer.stop_gmapping,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'savemap_gmapping': grpc.unary_unary_rpc_method_handler(
                    servicer.savemap_gmapping,
                    request_deserializer=android__msg__pb2.gmappingops.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'reset_gmapping': grpc.unary_unary_rpc_method_handler(
                    servicer.reset_gmapping,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_robot_mode': grpc.unary_unary_rpc_method_handler(
                    servicer.get_robot_mode,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.reply_value.SerializeToString,
            ),
            'get_allmaps': grpc.unary_unary_rpc_method_handler(
                    servicer.get_allmaps,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.navmap_collec.SerializeToString,
            ),
            'update_mapname': grpc.unary_unary_rpc_method_handler(
                    servicer.update_mapname,
                    request_deserializer=android__msg__pb2.navmap_req.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'delete_map': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_map,
                    request_deserializer=android__msg__pb2.navmap_req.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_mapdata': grpc.unary_unary_rpc_method_handler(
                    servicer.get_mapdata,
                    request_deserializer=android__msg__pb2.navmap.FromString,
                    response_serializer=android__msg__pb2.navmapdata.SerializeToString,
            ),
            'get_mapmeta': grpc.unary_unary_rpc_method_handler(
                    servicer.get_mapmeta,
                    request_deserializer=android__msg__pb2.navmap.FromString,
                    response_serializer=android__msg__pb2.navmapmeta.SerializeToString,
            ),
            'set_sonardistances': grpc.unary_unary_rpc_method_handler(
                    servicer.set_sonardistances,
                    request_deserializer=android__msg__pb2.sonar_distances.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_mapdata_compress': grpc.unary_unary_rpc_method_handler(
                    servicer.get_mapdata_compress,
                    request_deserializer=android__msg__pb2.navmap.FromString,
                    response_serializer=android__msg__pb2.navmapdata.SerializeToString,
            ),
            'update_mapdata_compress': grpc.unary_unary_rpc_method_handler(
                    servicer.update_mapdata_compress,
                    request_deserializer=android__msg__pb2.navmapdata.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_map_file': grpc.unary_unary_rpc_method_handler(
                    servicer.get_map_file,
                    request_deserializer=android__msg__pb2.navmap.FromString,
                    response_serializer=android__msg__pb2.map_file.SerializeToString,
            ),
            'set_map_file': grpc.unary_unary_rpc_method_handler(
                    servicer.set_map_file,
                    request_deserializer=android__msg__pb2.map_file.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_map_currpos': grpc.unary_unary_rpc_method_handler(
                    servicer.get_map_currpos,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.mappos.SerializeToString,
            ),
            'add_map_pos': grpc.unary_unary_rpc_method_handler(
                    servicer.add_map_pos,
                    request_deserializer=android__msg__pb2.map_waypoint.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_map_pos': grpc.unary_unary_rpc_method_handler(
                    servicer.get_map_pos,
                    request_deserializer=android__msg__pb2.map_waypoint.FromString,
                    response_serializer=android__msg__pb2.mappos.SerializeToString,
            ),
            'get_map_allpos': grpc.unary_unary_rpc_method_handler(
                    servicer.get_map_allpos,
                    request_deserializer=android__msg__pb2.map_waypoint.FromString,
                    response_serializer=android__msg__pb2.mappos_collec.SerializeToString,
            ),
            'update_map_pos': grpc.unary_unary_rpc_method_handler(
                    servicer.update_map_pos,
                    request_deserializer=android__msg__pb2.map_waypoint.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'del_map_pos': grpc.unary_unary_rpc_method_handler(
                    servicer.del_map_pos,
                    request_deserializer=android__msg__pb2.map_waypoint.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'del_map_allpos': grpc.unary_unary_rpc_method_handler(
                    servicer.del_map_allpos,
                    request_deserializer=android__msg__pb2.map_waypoint.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_all_navqueue_pos': grpc.unary_unary_rpc_method_handler(
                    servicer.get_all_navqueue_pos,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.mappos_collec.SerializeToString,
            ),
            'add_navqueue_pos': grpc.unary_unary_rpc_method_handler(
                    servicer.add_navqueue_pos,
                    request_deserializer=android__msg__pb2.mappos.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_navqueue_pos': grpc.unary_unary_rpc_method_handler(
                    servicer.get_navqueue_pos,
                    request_deserializer=android__msg__pb2.mappos.FromString,
                    response_serializer=android__msg__pb2.mappos.SerializeToString,
            ),
            'update_navqueue_pos': grpc.unary_unary_rpc_method_handler(
                    servicer.update_navqueue_pos,
                    request_deserializer=android__msg__pb2.mappos.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'del_navqueue_pos': grpc.unary_unary_rpc_method_handler(
                    servicer.del_navqueue_pos,
                    request_deserializer=android__msg__pb2.mappos.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'del_all_navqueue_pos': grpc.unary_unary_rpc_method_handler(
                    servicer.del_all_navqueue_pos,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'load_navqueue_pos': grpc.unary_unary_rpc_method_handler(
                    servicer.load_navqueue_pos,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.mappos_collec.SerializeToString,
            ),
            'save_navqueue_pos': grpc.unary_unary_rpc_method_handler(
                    servicer.save_navqueue_pos,
                    request_deserializer=android__msg__pb2.mappos_collec.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'start_nav_queue': grpc.unary_unary_rpc_method_handler(
                    servicer.start_nav_queue,
                    request_deserializer=android__msg__pb2.navmode.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'stop_nav_queue': grpc.unary_unary_rpc_method_handler(
                    servicer.stop_nav_queue,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_nav_status': grpc.unary_unary_rpc_method_handler(
                    servicer.get_nav_status,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.navstatus.SerializeToString,
            ),
            'get_nav_mode': grpc.unary_unary_rpc_method_handler(
                    servicer.get_nav_mode,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.navmode.SerializeToString,
            ),
            'set_nav_mode': grpc.unary_unary_rpc_method_handler(
                    servicer.set_nav_mode,
                    request_deserializer=android__msg__pb2.navmode.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'set_nav_pause_interval': grpc.unary_unary_rpc_method_handler(
                    servicer.set_nav_pause_interval,
                    request_deserializer=android__msg__pb2.navpause.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'nav_manual_moveto_next': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_manual_moveto_next,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'start_trace': grpc.unary_unary_rpc_method_handler(
                    servicer.start_trace,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'stop_trace': grpc.unary_unary_rpc_method_handler(
                    servicer.stop_trace,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'switchmap_trace': grpc.unary_unary_rpc_method_handler(
                    servicer.switchmap_trace,
                    request_deserializer=android__msg__pb2.traceops.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'cmd_trace': grpc.unary_unary_rpc_method_handler(
                    servicer.cmd_trace,
                    request_deserializer=android__msg__pb2.trace_cmd.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'set_trace_pos_list': grpc.unary_unary_rpc_method_handler(
                    servicer.set_trace_pos_list,
                    request_deserializer=android__msg__pb2.trace_pos_list.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'cmd_joystick': grpc.unary_unary_rpc_method_handler(
                    servicer.cmd_joystick,
                    request_deserializer=android__msg__pb2.joystick_cmd.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_nav_targetscore': grpc.unary_unary_rpc_method_handler(
                    servicer.get_nav_targetscore,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.targetsocre.SerializeToString,
            ),
            'set_target_command': grpc.unary_unary_rpc_method_handler(
                    servicer.set_target_command,
                    request_deserializer=android__msg__pb2.targetcommand.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'set_target_mode': grpc.unary_unary_rpc_method_handler(
                    servicer.set_target_mode,
                    request_deserializer=android__msg__pb2.targetmode.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_robot_move_status': grpc.unary_unary_rpc_method_handler(
                    servicer.get_robot_move_status,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.move_status.SerializeToString,
            ),
            'control_ptz': grpc.unary_unary_rpc_method_handler(
                    servicer.control_ptz,
                    request_deserializer=android__msg__pb2.ptz_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'control_lift': grpc.unary_unary_rpc_method_handler(
                    servicer.control_lift,
                    request_deserializer=android__msg__pb2.reply_value.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'set_lift': grpc.unary_unary_rpc_method_handler(
                    servicer.set_lift,
                    request_deserializer=android__msg__pb2.reply_value.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'cmd_fzulift': grpc.unary_unary_rpc_method_handler(
                    servicer.cmd_fzulift,
                    request_deserializer=android__msg__pb2.reply_value.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'start_navigation_default': grpc.unary_unary_rpc_method_handler(
                    servicer.start_navigation_default,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_moving_param_default': grpc.unary_unary_rpc_method_handler(
                    servicer.get_moving_param_default,
                    request_deserializer=android__msg__pb2.client_request.FromString,
                    response_serializer=android__msg__pb2.moving_param_default.SerializeToString,
            ),
            'set_buzzer': grpc.unary_unary_rpc_method_handler(
                    servicer.set_buzzer,
                    request_deserializer=android__msg__pb2.buzzer_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'set_ultrasonic': grpc.unary_unary_rpc_method_handler(
                    servicer.set_ultrasonic,
                    request_deserializer=android__msg__pb2.ultr_cmd.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_driver_state': grpc.unary_unary_rpc_method_handler(
                    servicer.get_driver_state,
                    request_deserializer=android__msg__pb2.driver_state_cmd.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'get_obstacle_avoidance_status': grpc.unary_unary_rpc_method_handler(
                    servicer.get_obstacle_avoidance_status,
                    request_deserializer=android__msg__pb2.obstacle_avoidance_cmd.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'set_obstacle_avoidance_status': grpc.unary_unary_rpc_method_handler(
                    servicer.set_obstacle_avoidance_status,
                    request_deserializer=android__msg__pb2.obstacle_avoidance_status.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
            'turn_inplace': grpc.unary_unary_rpc_method_handler(
                    servicer.turn_inplace,
                    request_deserializer=android__msg__pb2.inplace_info.FromString,
                    response_serializer=android__msg__pb2.server_reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'navmsg.Navsystem', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Navsystem(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def query_robot_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_info',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.robot_info.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_pos_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_pos_status',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.pos_info.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_speed_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_speed_status',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.vel_info.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_rosstatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_rosstatus',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.processState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_emergency_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_emergency_status',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.emergence_status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_basicstatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_basicstatus',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.machineState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_loc_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_loc_status',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.loc_status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_move_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_move_status',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.move_status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_charge_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_charge_status',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.charge_status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_voltage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_voltage',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.navvoltage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_systemmsg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_systemmsg',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.system_message.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_map(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_map',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.runningmap.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_sensor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_sensor',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.sensorstatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_laserscan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_laserscan',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.laserscan.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_sonardistances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_sonardistances',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.sonar_distances.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_sonardata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_sonardata',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.sonar_data.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_robot_sensorcondition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/query_robot_sensorcondition',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.sensor_condition.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_report_cfg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_report_cfg',
            android__msg__pb2.report_cfg.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def handle_cli_register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/handle_cli_register',
            android__msg__pb2.register_client.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_robotinfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_robotinfo',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.robot_info.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_robotpose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_robotpose',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.pos_info.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_robotspeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_robotspeed',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.vel_info.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_rosstate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_rosstate',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.processState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_machinestate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_machinestate',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.machineState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_lognum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_lognum',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.lognum.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_logdata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_logdata',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.logdata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_chargestatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_chargestatus',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.charge_status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_recharge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_recharge',
            android__msg__pb2.charge_handle.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_robot_speed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_robot_speed',
            android__msg__pb2.vel_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def start_nav_localize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/start_nav_localize',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.pos_info.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_nav_initpose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_nav_initpose',
            android__msg__pb2.pos_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_nav_reinitpose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_nav_reinitpose',
            android__msg__pb2.reinitpose_status.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_nav_goalpose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_nav_goalpose',
            android__msg__pb2.pos_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_nav_goalcancel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_nav_goalcancel',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def start_navigation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/start_navigation',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def start_navigation_map(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/start_navigation_map',
            android__msg__pb2.navops.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def stop_navigation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/stop_navigation',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def switchmap_navigation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/switchmap_navigation',
            android__msg__pb2.navops.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def start_gmapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/start_gmapping',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def stop_gmapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/stop_gmapping',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def savemap_gmapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/savemap_gmapping',
            android__msg__pb2.gmappingops.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def reset_gmapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/reset_gmapping',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_robot_mode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_robot_mode',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.reply_value.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_allmaps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_allmaps',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.navmap_collec.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def update_mapname(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/update_mapname',
            android__msg__pb2.navmap_req.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def delete_map(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/delete_map',
            android__msg__pb2.navmap_req.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_mapdata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_mapdata',
            android__msg__pb2.navmap.SerializeToString,
            android__msg__pb2.navmapdata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_mapmeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_mapmeta',
            android__msg__pb2.navmap.SerializeToString,
            android__msg__pb2.navmapmeta.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_sonardistances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_sonardistances',
            android__msg__pb2.sonar_distances.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_mapdata_compress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_mapdata_compress',
            android__msg__pb2.navmap.SerializeToString,
            android__msg__pb2.navmapdata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def update_mapdata_compress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/update_mapdata_compress',
            android__msg__pb2.navmapdata.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_map_file(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_map_file',
            android__msg__pb2.navmap.SerializeToString,
            android__msg__pb2.map_file.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_map_file(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_map_file',
            android__msg__pb2.map_file.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_map_currpos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_map_currpos',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.mappos.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def add_map_pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/add_map_pos',
            android__msg__pb2.map_waypoint.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_map_pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_map_pos',
            android__msg__pb2.map_waypoint.SerializeToString,
            android__msg__pb2.mappos.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_map_allpos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_map_allpos',
            android__msg__pb2.map_waypoint.SerializeToString,
            android__msg__pb2.mappos_collec.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def update_map_pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/update_map_pos',
            android__msg__pb2.map_waypoint.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def del_map_pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/del_map_pos',
            android__msg__pb2.map_waypoint.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def del_map_allpos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/del_map_allpos',
            android__msg__pb2.map_waypoint.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_all_navqueue_pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_all_navqueue_pos',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.mappos_collec.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def add_navqueue_pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/add_navqueue_pos',
            android__msg__pb2.mappos.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_navqueue_pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_navqueue_pos',
            android__msg__pb2.mappos.SerializeToString,
            android__msg__pb2.mappos.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def update_navqueue_pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/update_navqueue_pos',
            android__msg__pb2.mappos.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def del_navqueue_pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/del_navqueue_pos',
            android__msg__pb2.mappos.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def del_all_navqueue_pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/del_all_navqueue_pos',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def load_navqueue_pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/load_navqueue_pos',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.mappos_collec.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def save_navqueue_pos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/save_navqueue_pos',
            android__msg__pb2.mappos_collec.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def start_nav_queue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/start_nav_queue',
            android__msg__pb2.navmode.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def stop_nav_queue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/stop_nav_queue',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_nav_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_nav_status',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.navstatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_nav_mode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_nav_mode',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.navmode.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_nav_mode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_nav_mode',
            android__msg__pb2.navmode.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_nav_pause_interval(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_nav_pause_interval',
            android__msg__pb2.navpause.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def nav_manual_moveto_next(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/nav_manual_moveto_next',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def start_trace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/start_trace',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def stop_trace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/stop_trace',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def switchmap_trace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/switchmap_trace',
            android__msg__pb2.traceops.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def cmd_trace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/cmd_trace',
            android__msg__pb2.trace_cmd.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_trace_pos_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_trace_pos_list',
            android__msg__pb2.trace_pos_list.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def cmd_joystick(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/cmd_joystick',
            android__msg__pb2.joystick_cmd.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_nav_targetscore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_nav_targetscore',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.targetsocre.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_target_command(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_target_command',
            android__msg__pb2.targetcommand.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_target_mode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_target_mode',
            android__msg__pb2.targetmode.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_robot_move_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_robot_move_status',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.move_status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def control_ptz(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/control_ptz',
            android__msg__pb2.ptz_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def control_lift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/control_lift',
            android__msg__pb2.reply_value.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_lift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_lift',
            android__msg__pb2.reply_value.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def cmd_fzulift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/cmd_fzulift',
            android__msg__pb2.reply_value.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def start_navigation_default(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/start_navigation_default',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_moving_param_default(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_moving_param_default',
            android__msg__pb2.client_request.SerializeToString,
            android__msg__pb2.moving_param_default.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_buzzer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_buzzer',
            android__msg__pb2.buzzer_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_ultrasonic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_ultrasonic',
            android__msg__pb2.ultr_cmd.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_driver_state(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_driver_state',
            android__msg__pb2.driver_state_cmd.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_obstacle_avoidance_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/get_obstacle_avoidance_status',
            android__msg__pb2.obstacle_avoidance_cmd.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def set_obstacle_avoidance_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/set_obstacle_avoidance_status',
            android__msg__pb2.obstacle_avoidance_status.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def turn_inplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.Navsystem/turn_inplace',
            android__msg__pb2.inplace_info.SerializeToString,
            android__msg__pb2.server_reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class PersonServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.tracking = channel.unary_unary(
                '/navmsg.PersonService/tracking',
                request_serializer=android__msg__pb2.Person.SerializeToString,
                response_deserializer=android__msg__pb2.Response.FromString,
                _registered_method=True)
        self.trackingStates = channel.unary_unary(
                '/navmsg.PersonService/trackingStates',
                request_serializer=android__msg__pb2.Person.SerializeToString,
                response_deserializer=android__msg__pb2.Response.FromString,
                _registered_method=True)
        self.getImage = channel.unary_unary(
                '/navmsg.PersonService/getImage',
                request_serializer=android__msg__pb2.Person.SerializeToString,
                response_deserializer=android__msg__pb2.Response.FromString,
                _registered_method=True)


class PersonServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def tracking(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def trackingStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PersonServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'tracking': grpc.unary_unary_rpc_method_handler(
                    servicer.tracking,
                    request_deserializer=android__msg__pb2.Person.FromString,
                    response_serializer=android__msg__pb2.Response.SerializeToString,
            ),
            'trackingStates': grpc.unary_unary_rpc_method_handler(
                    servicer.trackingStates,
                    request_deserializer=android__msg__pb2.Person.FromString,
                    response_serializer=android__msg__pb2.Response.SerializeToString,
            ),
            'getImage': grpc.unary_unary_rpc_method_handler(
                    servicer.getImage,
                    request_deserializer=android__msg__pb2.Person.FromString,
                    response_serializer=android__msg__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'navmsg.PersonService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PersonService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def tracking(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PersonService/tracking',
            android__msg__pb2.Person.SerializeToString,
            android__msg__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def trackingStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PersonService/trackingStates',
            android__msg__pb2.Person.SerializeToString,
            android__msg__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/navmsg.PersonService/getImage',
            android__msg__pb2.Person.SerializeToString,
            android__msg__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
